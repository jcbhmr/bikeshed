name: CI

on:
  push:
    branches-ignore:
      - "dependabot/**"
      - "daily-test-sync"
  pull_request:
  workflow_dispatch: {}
  workflow_call:
    inputs:
      workflow_call:
        type: boolean
        default: true

jobs:
  build:
    if: "!inputs.workflow_call"
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
        exclude:
          - os: windows-latest
            python-version: '3.11'

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install --upgrade pip wheel
        pip install --editable .
    - name: Test with bikeshed
      run: bikeshed --no-update test

  lint:
    if: "!inputs.workflow_call"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - uses: psf/black@24.10.0
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -r .github/workflows/update-tests/requirements.txt
    - name: Lint with ruff
      run: |
        ruff check bikeshed

    - name: Lint with pylint
      run: |
        echo "::add-matcher::.github/workflows/pylint-problem-matcher.json"
        pylint bikeshed *.py .github/workflows/update-tests/*.py

    - name: Lint with mypy
      run: |
        mypy

  pyinstaller:
    strategy:
      fail-fast: false
      matrix:
        include:
          # https://packaging.python.org/en/latest/specifications/platform-compatibility-tags/#platform-tag
          # target=$(python -c 'import sysconfig; print(sysconfig.get_platform().replace("-", "_").replace(".", "_"))')
          - { os: ubuntu-latest, target: linux_x86_64 }
          - { os: macos-latest, target: macosx_11_0_arm64 }
          - { os: macos-13, target: macosx_10_9_x86_64 }
          - { os: windows-latest, target: win_amd64 }
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install -e .
      - run: pip install pyinstaller
      - run: bikeshed update
      - run: pyinstaller -y --name=bikeshed --collect-all=bikeshed ./bikeshed.py
      - env:
          target: ${{ matrix.target }}
        run: |
          version=$(cat bikeshed/semver.txt)
          mkdir stage
          mv dist/bikeshed stage/bikeshed-$target-$version
      - uses: actions/upload-artifact@v4
        with:
          name: bikeshed-${{ matrix.target }}
          path: stage

  bikeshed-ape:
    needs: pyinstaller
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: bjia56/setup-cosmocc@v0.0.3
      - uses: actions/download-artifact@v4
        with:
          name: bikeshed-linux_x86_64
      - uses: actions/download-artifact@v4
        with:
          name: bikeshed-macosx_10_9_x86_64
      - uses: actions/download-artifact@v4
        with:
          name: bikeshed-macosx_11_0_arm64
      - uses: actions/download-artifact@v4
        with:
          name: bikeshed-win_amd64
      - run: |
          version=$(cat bikeshed/semver.txt)
          mkdir bikeshed-ape-$version
          mv bikeshed-linux_x86_64-$version bikeshed-linux_x86_64
          mv bikeshed-macosx_10_9_x86_64-$version bikeshed-macosx_10_9_x86_64
          mv bikeshed-macosx_11_0_arm64-$version bikeshed-macosx_11_0_arm64
          mv bikeshed-win_amd64-$version bikeshed-win_amd64
          cosmoc++ -std=c++23 -fexceptions -DVERSION=\"$version\" -o bikeshed-ape-$version/bikeshed bikeshed-ape.cpp
          rm bikeshed-ape-$version/bikeshed.aarch64.elf
          rm bikeshed-ape-$version/bikeshed.com.dbg
          zip -Ar bikeshed-ape-$version/bikeshed bikeshed-linux_x86_64 bikeshed-macosx_10_9_x86_64 bikeshed-macosx_11_0_arm64 bikeshed-win_amd64
      - run: |
          version=$(cat bikeshed/semver.txt)
          mkdir stage
          mv bikeshed-ape-$version stage/bikeshed-ape-$version
      - uses: actions/upload-artifact@v4
        with:
          name: bikeshed-ape
          path: stage
